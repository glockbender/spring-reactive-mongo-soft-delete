plugins {
    id 'org.jetbrains.kotlin.plugin.jpa' version '1.3.41'
    id 'org.springframework.boot' version '2.1.3.RELEASE'
    id 'org.jetbrains.kotlin.jvm' version '1.3.41'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.3.41'
    id "org.jlleitschuh.gradle.ktlint" version "8.2.0"
}

apply plugin: 'kotlin-jpa'
apply plugin: 'io.spring.dependency-management'
apply plugin: "application"
apply plugin: 'kotlin-kapt'
apply plugin: 'idea'
//make all class open for jpa
apply plugin: 'kotlin-allopen'
allOpen {
    annotation("javax.persistence.Entity")
}

version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

idea {
    module {
        def kaptMain = file("${project.buildDir}/generated/source/kapt/main")
        sourceDirs += kaptMain
        generatedSourceDirs += kaptMain

        outputDir file("${project.buildDir}/classes/main")
        testOutputDir file("${project.buildDir}/classes/test")


    }
}

mainClassName = ''

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-mongodb-reactive'


    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    testCompile("org.springframework.boot:spring-boot-starter-test") {
        exclude module: 'junit'
    }
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    kapt("org.springframework.boot:spring-boot-configuration-processor")
    configurations.kapt.extendsFrom(configurations.compileOnly)
}

compileJava.dependsOn(processResources)

test {
    useJUnitPlatform()
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
